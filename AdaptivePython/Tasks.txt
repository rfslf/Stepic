61 The smallest integer
A user inputs a number M. You need to find out what is the smallest integer n such that n! > M.

62 The lucky ticket
Paul loves to ride public transport and after receiving the ticket, he immediately checks whether he got the lucky one.
A ticket is considered a lucky one if the sum of the first three numbers in this ticket matches the sum of the last
three numbers in the same ticket. However, Paul does not count well in head that is why he asks you to write the
program, which will check the equality of the sums and display "Lucky" if the sums match, and "Regular" if the sums
differ. A string of six digits is provided as input to the program. You need to print out only the word "Lucky" or
"Regular" with a capital letter.

63 The percentage of G and C characters
GC-content is an important feature of the genome sequences and is defined as the percentage ratio of the sum of all
guanines and cytosines to the overall number of nucleic bases in the genome sequence. Write a program, which calculates
the percentage of G characters (guanine) and C characters (cytosine) in the entered string. Your program should be case
independent.

64 Сompression algorithm
Upon learning that DNA is not a random string, freshmen of the Bioinformatics Institute from the informatics group
suggested using a compression algorithm that compresses repeated characters in a string.

65 The longest word
In the given string find the longest word and output it.

66 Palindrome
Given a string. Find whether it is a palindrome, i.e. it reads the same both left-to-right and right-to-left. Output
“yes” if the string is a palindrome and “no” otherwise.

67 Spaces
Given a line, containing spaces. Find how many words are there (the word is a sequence of non-space characters, words
are separated by a single space, the first and last character of the string is not a space).

68 Contigs
Write a program that reads an integer from the input (a non-negative one), and outputs this number to the console
together with a correctly changed word "contig", for example: 1 contig, 5 contigs.

69 From Python code into Java code
You decided to write a converter from Python code into Java code. As CamelCase names are standard in Java, you decided
to learn how to convert names from underscore into this format. First, write a program, which changes variable names
from underscore to the UpperCamelCase style.

70 Riddle
Here you will learn how to work with strings. Many of us are familiar with the following child riddle:
A and B sat in the tree.
A had fallen, B was stolen.
What's remaining in the tree?
Write a program, which reads the two names and outputs the poem, in which these names are used instead of A and B.

71 Grades 2
Write a program which finds the percentage of students who have received the A grade. Used the five-point grading scale
with grades A, B, C, D and F.

72 Units of measurement
You should write a program that can transform some units of measurement into others.

73 Anagrams
Write a program that checks whether two given words are anagrams.
The program should output True in the case if entered words are anagrams, and False otherwise.

74 Substring
Write a program that finds all occurrences of the given substring in the string.

75 100 years old
Write a program, which takes the name and age of a person as input (in a single line, space-separated), and finds the
year when this person turns 100 years old. Let's assume that today is December 31, 2016.

76 Letters
As input your program receives the three strings – s, a, b, consisting of lowercase letters of the Latin alphabet.
In a single operation you can exchange all the occurrences of string a in s to the string b. You need to find out after
what minimum number of operations the string s will not contain occurrences of the string a, or to find out that it
will not happen.

77 The slice of string
Given: A string s of length at most 200 letters and four integers a, b, c and d. Return: The slice of this string from
indices a through b and c through d (with space in between), inclusively.

78 Numbers
Write a program that reads integers from the input one number per line. For each of the entered numbers please check:
if the number is less than 10, then skip that number;
if the number is greater than 100, then stop reading numbers;
in any other cases bring the number back to the console in a separate line.

79 Hello world!
Print "Hello, world!"

80 The same line
Write a program, which reads the line from a standard input, using the input() function, and outputs the same line to
the standard output, using the print() function.

81 Greeting
Write a program, which asks the name of the user and than greets him.

82 Sum
Find the sum of two numbers.

83 Sequence reversal
Write a program, which turns a sequence of integers x1,x2,…,xn into the sequence (x1+xn),(x2+xn−1),(x3+xn−2),… of
length ⌈n/2⌉.

84 Replacement
At some point, you got tired of using the file names with spaces and you have decided to write a program that renames
all files that contain spaces in their names by replacing the groups of spaces by the underscore symbol "_". First, you
need to write a program that reads the string and replaces the group of white space characters by underscore symbols.

85 IP address
Write a program to determine whether the specified string is a correct IP address.

86 Containing the words
Input of the program is a line containing the words separated by a space. The program should output the information of
lengths of words in the given line, from the shortest to the longest word (see the example). A word is a sequence of
arbitrary characters surrounded by spaces or line boundaries. Note that punctuation marks also belong to a word.

87 Login and password
You have login and password as integer numbers stored in the code as login and password variables. The user inputs two
integers (the login and the password). If they match to one in the code - output "Login success", if the password
doesn't match, but logins match, output "Wrong password", if login is wrong, output "No user with login XXXX found",
where XXXX is the login, the user's just input.

88 Transform the symbol
Transform the symbol into uppercase.

89 Uppercase
Input a single character and change its register. That is, if the lowercase letter has been entered – make it uppercase,
 and vice versa. Characters that are not Latin ones need to stay unchanged.

90 Digit or not?
Find whether the given symbol is a digit. Output "yes", is the symbol is a digit and "no" otherwise. Please note that
you should output words in a lowercase.

91 Cover intervals with points
Given n intervals. Find the set of points having the minimum size (cardinality), for which each of the given intervals
contains at least one of the points. The first line given 1≤n≤100 - number of intervals. Each of the next n lines
contains two 0≤l≤r≤109 numbers, setting the beginning and the end of the interval. Output the minimum size of the set m
and the m points themselves. If there are several such sets, output any of them.

92 Continuous backpack
First line contain the number of items 1≤n≤103 and capacity of the backpack 0≤W≤2⋅106. Each of the next n lines
specifies the cost 0≤ci≤2⋅106 and volume 0<wi≤2⋅106 of an item (n, W, ci, wi — integers). Output the maximum cost of
parts of the items (you can separate any part from each item, its cost and volume will decrease proportionally), placed
in the backpack, with an accuracy of not less than three decimal places.

93 Huffman coding
Given non-empty string s of length not more than 104, consisting of lowercase letters of the Latin alphabet. Construct
an optimized prefix-free code. In the first line output the number of various letters k, which are present in the
string, and the size of the resulting encoded string. In the next k lines write letter codes in the "letter: code"
format. In the last line output the encoded string.

94 Huffman decoding
Restore the string by its code and the prefix-free code of symbols. The first line of the input file specifies the two
integers k and l separated by a space — the amount of various characters in the string and the size of the resulting
encoded string, accordingly. The next k lines contain letter codes in the "letter: code" format. None of the codes is a
prefix of another one. Letters can be listed in any order. Letters can be only the lowercase letters of the Latin
alphabet; each of these letters occurs in the string at least once. Finally, the last line contains an encoded string.
The original string and the codes of all the letters are not empty. The specified code is that a coded string has the
minimum possible size. In the first line of the output file output the string s. It should consist of the lowercase
letters of the Latin alphabet. It is guaranteed that the length of the correct answer does not exceed 104 symbols.

95 Pairwise different summands
Given an integer 1≤n≤109 find the maximal number k such that n can be represented as a sum of pairwise different
positive integers. In the first line output k, in the next line output k summands.

96 Frequency of number
Given the natural number 1≤n≤105 and the array of integers A[1…n], not exceeding 109 by absolute value. Output 1, if the
 array A contains the number occurring strictly more than n/2 times, and output 0 otherwise.

97 The k-th order statistics
Given non-negative integers n, k and array of integers from the range of [0..109] size n≤106. You need to find the k-th
order statistics, i.e. to print the number, which would reside on the position with the index k (0..n-1) in the sorted
array. Write a non-recursive algorithm using the "divide and conquer" method.

98 The minimum number of coins
Each square of the rectangular table N×M contains some number. Initially the player is located in the top left square.
In one move he is allowed to move to the neighbouring cell either to the right or down (left and upward moves are not
permitted). When passing through a square the player pays that amount of coins, which is written in this square (he
must also pay coins for the first and for the last squares of his path). You need to find the minimum number of coins,
which the player needs to take in order to get to the bottom right corner.

99 The longest increasing subsequences
Given a sequence of integers. Find any of its longest increasing subsequences. The sequence is given in the form of
numbers separated by spaces on a single line. Output the subsequence in a single line, space separated.

100 Calculator
You have a basic calculator, which has only three operations with the current number x: replace x by 2x, 3x or x+1.
Given the integer 1≤n≤105, find the minimum number of k operations, necessary to get n from 1. Output k and the
sequence of intermediate numbers.

101 Backpack
The first input line contains the integers 1≤W≤104 and 1≤n≤300 — the capacity of the backpack and the number of gold
bars. The next line contains n integers 0≤w1,…,wn≤105, specifying the weight of these bars. Find the maximum weight of
the gold you can carry in the backpack.

102 Stairs
Given 1≤n≤102 – numer of stairs of the staircase, and the integers −104≤a1,…,an≤104, which are used to mark the stairs.
Find the maximum sum that can be obtained by going up the stairs from the bottom up (from the zero to the n-th stair),
each time going up one or two steps.

103 Edit distance
Calculate the edit distance of the two given non-empty strings having length of not more than 102, containing lowercase
letters of the Latin alphabet.

104 The largest consecutive-divisible subsequence
Given the integer 1≤n≤103 and the array A[1…n] of natural numbers, not exceeding 2⋅109. Output the maximum 1≤k≤n, for
which there will be a subsequence 1≤i1<i2<…<ik≤n with length k, each element of which is divisible by the previous one
(formally: for all 1≤j<k, A[ij]|A[ij+1]).

105 Non-increasing subsequence
Given n integers ai from 1 to n. Your task − to find the longest non-increasing subsequence of this sequence, i.e. such
sequence of indices  (i1<i2<⋯<ik), such that ai1≥ai2≥⋯≥aik and there is no sequence with the same properties of length
k+1. Use dynamic programming. This problem should be solved for O(nlogn).

106 Matrix
Given rectangular array (matrix) Mx N with integer elements. Find a rectangular area of this matrix, the sum of whose
elements is maximum.

107 Messages
In the message, consisting of the capital letters of the English alphabet, each letter was replaced by its number in
the alphabet (A - 1, B - 2, ..., Z - 26), and the space was replaced by as zero. By a given sequence of numbers, you
should find the number of the initial messages, from which it could be obtained.

108 Various sum
Given N integers A1, A2, ..., AN. You should find the number of various sum values of k1A1 + k2A2 + ... + kNAN.

109 The rabbit and the ladder
The rabbit appeared in the Zoo. He was placed in a cage, and the Director of the Zoo ordered to put a ladder in his
cage, so that he could entertain himself. Now our rabbit can jump up the ladder, jumping over the steps. The ladder has
the particular number of stairs N. In one jump the rabbit can jump over not more than К steps. To make it more fun, the
rabbit each time tries to find a new way to the top of the ladder. The Director is interested in how many different ways
does the rabbit have to reach the top of the ladder for a given values K and N. Help the Director to write a program
that will compute this number. For example, if K=3 and N=4, the following ways exist: 1+1+1+1, 1+1+2, 1+2+1, 2+1+1, 2+2,
 1+3, 3+1. Therefore for the given values the rabbit has only 7 different ways to reach the top of the ladder.

110 Binary search
The first line contains integer 1≤n≤105 and array A[1…n] of n various natural numbers, not exceeding 109, in ascending
order, the second one contains integer 1≤k≤105 and k natural numbers b1,…,bk, not exceeding 109. For each i from 1 to
k it is necessary to output index 1≤j≤n, for which A[j]=bi, or −1, if there is no such j.

111 Binary search 2
Given the sorted array of various integers A[0..n-1] and the array of integers B[0..m-1]. For each of the element of the
array B[i] find the minimum index of the array element A[k], nearest to B[i]. Search operation time for each element
B[i] should be O(log(k)). Hint. Please note that the time complexity should depend on the response index – k. To achieve
this asymptotic behaviour try to find an interval in the form of [2p,2p+1], containing the resulting point, and only
after this perform a traditional binary search.

112 The number of inversions
First line contains number 1≤n≤105, second one — array A[1…n], containing natural numbers not greater than 109. You need
to calculate the number of pairs of indices 1≤i<j≤n, for which A[i]>A[j].(Such pair of elements is called the inversion.
The number of inversion in the array is in some way its measure of random nature: for example, there are no inversions
at all in an array arranged in a nondecreasing order, and in an array, arranged in descending order, each two elements
form an inversion.)

113 Points and intervals
The first line contains the two integers: 1≤n≤50000 and 1≤m≤50000 — the amount of intervals and points on the straight
line, respectively. Next n lines each contain the two integers ai and bi (ai≤bi) — the coordinates of interval ends.
The last line contains m integers — points positions. All coordinates do not exceed 108 by absolute value. The point is
considered belonging to the specified interval, if it lies inside this interval or on the interval boundary. For each of
the points output to how many intervals it belongs to, in the order of occurence of these points in the input.

114 Counting sort
The first line contains the number 1≤n≤104, the second one — n natural numbers, not exceeding 10. Output the sequence of
 these numbers sorted in a non-decreasing way.

115 Polygonal curve
Given N points on the plane. Find the (N-1)-components not self-intersecting open polygonal curve, passing through all
these points. Construct the polygonal curve in the order of increasing x-coordinate. If there are two points with the
same x-coordinate, position earlier that point, which has the smaller y-coordinate. Use heapsort to sort the points.

116 Colored intervals
N intervals were colored on the number axis. We know the coordinate of the left and the right ends of each of these
intervals (Li and Ri). Find the sum of the lengths of parts of the number axis, colored evenly in a single layer.
Use merge sort algorithm for sorting.

117 Sort the sequence
Given the sequence of integers a[0...n−1] and the natural number k, such that for any  iand j: if j≥i+k, than a[i]≤a[j].
 Sort the sequence. The sequence can be very long. Time complexity: O(n∗log(k)). Additional memory: O(k).

118 Radix sort
iven an array of non-negative 64-bit numbers. The number of elements is not greater than 106. Sort the array using the
least significant digit (LSD) radix sort (by bytes). It means that each pass of the radix sort should stable sort all
the elements of the array by the next byte. Starting from the least to the most significant ones. A 64-bit number is
written 8 bytes, therefore there will be 8 such passes.

119 Insertion sort
Implement insertion sort for array of integers. The number of integers in the array is determined by the end of the
standard input stream and is not known in advance.

120 Arithmetic progression
Given a sequence of natural numbers from the range [1, 2147483647]. Find whether you can represent these numbers as
arithmetic progression. You can change the order of numbers in the sequence, if necessary.

121 Sorting
Given an array of integers. You should sort it (in a non-decreasing order), and then for each element display its index
in the initial array (starting from 1).

122 Swap or skip
We are given an array of integers, and we iterate through the pairs of adjacent elements from the beginning. If the
first member of the pair is greater than the second one (i.e. if they violate the order), we will swap (exchange) them.
What is especially important: the largest element will move to the latest position. Input data contain the sequence of
elements of the array, all positive integers. After them goes -1 meaning the end (this value should not be included into
the array). The output should contain single integer – the number of the performed swaps.

123 The smallest possible number
You should write a program which creates the smallest possible number from the digits of the two given natural numbers,
while maintaining the order of the digits in these given numbers.

124 Almost representative of the majority
Given the natural integer 1≤n≤105 and the sequence of integers 0≤a1,…,an≤109. Output 1, is the sequence contains an
integer, occurring strictly more than n3 times, and 0 otherwise.

125 Priority Queue
The first input line contains the number of operations 1≤n≤105. Each of the following n lines define the operation of
one of the following types: Insert x, where 0≤x≤109 — integer number; ExtractMax   .
First operation adds number x to the priority queue, the second one extracts the maximum number and outputs it.

126 Greedy
Little Johnny eats fruits from his grandma's basket. There are fruits with different mass in this basket. Little Johnny
can pick up not more than K ounces. Each fruit weights not more than K ounces. At a time, he chooses a few of the most
heavy fruits, which he can pick up simultaneously, bites a half of each of them and puts what is left back into the
basket. If the fruit weights odd number of ounces, he bites off its half, rounded up to the nearest whole number. He
completely eats those fruits, which weight 1 ounce. Find the number of attempts Little Johnny needs in order to eat all
fruits in the basket. Write your heap storage class, which implements priority queue. Input data format. Integer n – the
number of fruits, and the line with integer masses of fruits separated by space. Then in the separate line - the
"lifting capacity". Output data format. A non-negative number – the number of attempts to the basket.

127 Set of strings
Implement the data structure "set of strings" based on a dynamic hash table with open addressing. Stored strings are not
empty and contain lowercase Latin letters. The initial size of the table should be equal to 8. Perform rehashing only
in the case when the table-filling coefficient reaches 3/4. The structure of the data should support the operation of
adding a string to the set, deleting a string from the set and membership testing of this string to the set.

128 Sort the time moments
You need to sort the time moments, specified in hours, minutes and seconds. Input data The first line contains number N
(1 <= N <= 100), and the next N lines – N time intervals. Each time interval is set by three integers - hours (from 0
to 23), minutes (from 0 to 59) and seconds (from 0 to 59). Output the time intervals, sorted in nondecreasing order
without leading zeroes.

129 Binary tree
Given the number N<106 and the sequence of integers from the interval [−231..231] of length N. Construct the binary
tree, specified by the naive insertion order. Meaning: when adding the next number K to the tree with the root “root”,
if the root→Key ≤ K, then the K node is added to the right root subtree; otherwise – to the left root subtree. Output
elements in a post-order (bottom-up), separating them by spaces.

130 Military unit
In one military unit, it was decided to stand in a single line according to height. As the discipline was not the best
feature of this unit, some soldiers were late, and some had to be excluded from the activity due to their dirty boots.
Nevertheless, when soldiers left and arrived they had to stand according to their height - the tallest in the beginning,
and the shortest - in the end. The chief warrant officer was responsible for the procedure and he noticed an interesting
feature – all soldiers in this military units had the different height. Your task is to help him correctly arrange the
soldiers, namely: for every arriving soldier you need to specify in front of which soldier he has to stand. You need to
find it within O(logn) time.Input data format. The first line contains number N – the number of commands. Each of the
next lines contains the description of the command: the number 1 and X if the soldier stands into the line (X – the
height of the soldiers, a natural number up to 100 000 inclusive) or the number 2 and Y if the soldier, standing on the
Y place in the line, needs to be removed from this single line. Soldiers in the line are numbered from zero. Output data
format.For each command 1 (add to the line) you need to output the number K – the position, where this soldier has to
stand (all soldiers standing behind him, have to move back).

131 Realization of the matrix
Create and print (using the print function) an array of class np.ndarray with width 4 and height 3 with 2s on the main
diagonal and 1s on the first diagonal above the main one

132 Transform array
Create an array of class np.ndarray of width 4 and height 3 with 2s on the main diagonal and 1s on the first diagonal
above the main one.

133 Read data from that file
As input, your solution will get an address, where the csv-file is located – you have to read data from that file. The
first line in the file - column names, other lines - numeric data (that is, each line except the first one, contains a
sequence of real numbers, separated by commas). Find and print the vector of average values along the columns of the
input data.

134 Matrices
On the input, the program is given two matrices, each in the following format: the first line contains two positive
integers n and m separated by a space - matrix dimensions. The next line contains n⋅m space separated integers -
elements of the matrix. It is assumed that the matrix is filled line-by-line, which means the first m numbers – the
first row of the matrix, the numbers from m+1 to 2m- the second row, etc. Print the product of matrices XYT, if their
forms match, otherwise print the line "matrix shapes do not match" (if the forms of the matrices do not match properly).

135 Arguments
Write a program that runs from the console and prints the values of all the transferred arguments on the screen (the
name of the script does not need to be displayed). Do not change the order of the arguments in the output

136 Perimeter of the circle
Write a program which imports the math module and, by using the value of the number π from this module, finds the
perimeter of the circle, which is given in a standard input, and outputs it to a standard output.

137 Count the number of lines in file
Download the file. It specifies the address of another file that you need to download using the requests module and
count the number of lines in it. Use the function get to get the file (it makes sense to call the strip method of the
argument in order to remove white space characters from the ends). Upon obtaining the file, you can find the answer by
using to the field text. If the result of your program is not accepted, please check the url field for correctness.
Break down the text using the method splitlines in order to calculate the number of lines inside this text.
In the reply field write one number or submit the file, containing one number.

138 Date
Given three numbers in the first line, which correspond to some date – year, month and day. The second line contains a
single number – days, the number of days. Find the year, month and day of the date, which will come when the number of
days, equal to days, will pass from the initial date. Use the standard datetime module to solve this problem.
You will find it helpful to use the datetime.date class to store the date and the datetime.timedelta class to add days
to the date.

139 The problem to calculate TF-IDF
Implement mapper mapreduce of the problem to calculate TF-IDF using the Hadoop Streaming. In the input data, the key is
a word, and the value consists of the document number and tf, separated by tab. The value in the output data consists of
three components: document number, tf and 1, separated by ";".

140 WordCount
Write a program, which implements mapper for the WordCount in Hadoop Streaming.
The output data should be displayed in the order in which they came.

141 The problem of calculating the average time
Implement reducer in the problem of calculating the average time a user spent on the page. Mapper transfers data to
reducer in a form of key / value, where key - page address, value - number of seconds the user spent on this page.
Cast the average time at the output to an integer. The output data should be displayed in the order in which they came.

142 Linear algebraic equations
Write a program that solves system of linear algebraic equations by the Gaussian method.

143 K-combinations of n elements
You need to generate all possible k-combinations of n elements.

144 System of linear algebraic equations
Write a program that finds the best solution to a system of linear algebraic equations by the least squares method.

145 Catalan numbers
Knowing the explicit form of the Catalan numbers, output the recurrence relation, expressing Cn+1 only through Cn and
use it for the effective calculation of Cn. Input gets the number n≤100000. Output Cn by modulo 1000000007.

146 Calculate the Catalan number
Given a single natural number n≤1000 as input. You need to calculate the Catalan number Cn. As it can be very large,
output it by module 1000000007.

147 Buffer class
Implement the Buffer class, which will store the sequence elements and output the sum of the five consequent elements as
accumulation proceeds. One of the requirements for the class is that it should not store more elements than it is
necessary, that is it does not have to store the elements that are already included in the five, for which the sum was
displayed.

148 Money Box
Implement the MoneyBox class to work with a virtual money box. Each money box has a limited capacity – the number of
coins (an integer) that can fit into this particular money box. The class should support the storing of  the number of
coins inside the money box, provide an functionality to add coins to the money box and to find out, whether you can add
some more coins, not exceeding its capacity.

149 Poker
Write a program that gets the input of the five cards and outputs the senior poker combination, which is formed by these
cards. Input format: Single string, which specifies the five cards in the <value><suit> format, separated by a space.
Output format: The name of the senior combination in the given five cards.

150 Fool
Write a program, which decides whether one cards beats another one.
If there are two cards of the same suit, wins the one having the higher face value;
If the cards belong to the different suits, wins the one having the trump suit;
If the cards belong to the different suits and there are no cards from the trump suit, nobody wins.

151 Loggable List
Implement the class LoggableList, inheriting it from the classes list and Loggable, so that when adding an element to
the list using the append method, the message containing the just added element would be sent to the log.

152 An extended stack
Implement a data structure that represents an extended stack. It is necessary to support the pushing (appending) of the
element to the top of the stack, the popping (removal) from the top of the stack, and also the operations of addition,
subtraction, multiplication and integer division. The operation of addition on the stack is defined as follows. The top
element (top1) is removed from the stack, then the next top element (top2) is removed, and then the element equal to
top1 + top2 is pushed to the stack. In similar way are defined the operations of subtraction (top1 - top2),
multiplication (top1 * top2) and integer division (top1 // top2). Implement this data structure as the ExtendedStack
class, by inheriting it from the standard list class.

153 Inheritance
You are given the description of class inheritances in the following format. <class name 1> : <class name 2>
<class name 3> ... <class name k> It means that class 1 is inherited from class 2, clacc 3, etc.
You should answer the queries whether one class is the ancestor of another class

154 An algorithm to decode strings
On the input, the algorithm has a string containing the characters of the Latin alphabet. This string is split into the
so-called "series", which are encoded by a number-symbol pair or just a symbol (in this case, the number is considered
equal to one). The result must contain the series in the same order, in which they occur in the original string, and
each series is disclosed into the sequence of characters of a corresponding length.

155 The Caesar cipher
Write a program, which encodes the text by the Caesar cipher. The alphabet contains space and all lowercase letters of
the Latin alphabet: 'abcdefghijklmnopqrstuvwxyz' Input format: The first line contains the encryption cypher: a positive
number corresponds to the shift to the right, negative – to the left. The second line contains the non-empty encryption
phrase. Leading and ending spaces should not be considered. Output format: Single line with a phrase: Result: "..." ,
where the encrypted sequence is written inside the quotation marks instead of three dots.

156 Run-length encoding
Input format: Single string containing the arbitrary charaters of the Latin alphabet.
Output format: The string containing a coded sequence.

157 The Caesar cipher 2
Write a program, which encodes the text by the Caesar cipher. It should encode the symbols from the 1F600—1F64F interval
of the Unicode character table. We use UTF-8 encoding.Input format: the first line contains the encryption shift (an
integer). A positive number corresponds to a shift to the right. The second line contains a non-empty phrase for
encryption. Output format: The single line with a phrase: Result: "..." , where the encoded sequence is included inside
the quotes.

158 Sum of two neighbouring numbers
Write a program the input of which is the list of numbers in one line. For each elements of this list, the program
should output the sum of its two neighbouring numbers. For list item that is first or last, an element from the opposite
end of the list is considered in place of a missing neighbour. For example, if the input list is "1 3 5 6 10", the
expected output list is "13 6 9 15 7" (without quotation marks). If only one number serves as input, the output shall
display the same one number. The output must contain one line with the numbers from the new list, separated by space.

159 Method split
Input of this program has a single line with integers. The program must output the sum of these numbers.
Use the string method split.

160 Position in list
Write a program, which reads the list of numbers lst from the first line and the number x from the second line of the
input; and outputs all positions, on which the number x can be found in the given list lst. The positions are num bered
from zero; if the number x is not present in the list - output "Missing" (without quotation marks, starting from the
capital letter). Output the positions in a single line, by the ascending absolute values.

161 List
Given single line with integers, separated by a space. Output the elements from the even positions, each on a separate
line, and the sum of the even elements. The positions are numbered starting with 1.

162 Simple list processing
Write a program that takes a list of numbers, and outputs the maximum and the minimum number in the list (in one line).
Please don't use the standard max and min functions, which do the same. It is important that you could do it by yourself.

163 Line with integers
Write a program that reads a line with integers (the number of integers can be arbitrary) and, using a loop by the
elements of this list, calculates the sum of integers in this string.

164 List 2
You are given an integer number A and an array ending with 0. You must count how many times A appears in the array.
INPUT: User firstly inputs A, and then the array of indefinite length ending with 0.
OUTPUT: The number of times A appears in the array.

165 Repeated values
Write a program that takes a list of integers as input, and outputs the values that are repeated in it more than once.
You may need the list method sort to solve this problem. Input format: One line with integers, separated by a space.
Output format: A line with integers, separated by a space. The numbers must not be repeated, the output order can be
arbitrary.

166 Go through the array
Given the array of length M with integers in the range 1 ... N, where N is not greater than 20. You need to go through
the array and count how many times each number appears. Please do not use the 20 individual variables for the counters,
but create an array from them. Input data contain M and N in the first line. Second line (it may be quite long) contains
M numbers, separated by a space. The solution should contain exactly N numbers, separated by spaces. The first indicates
 the number of ones in the original array, the second – the number of twos, and so on.

167 Checksums
Checksums – the small values computed from the relatively large amounts of data, in order to ensure its consistency –
i.e. to check that the data was not accidentally damaged, changed or partially lost. Given an array, you need to
calculate its checksum. This should be done as follows: each element (starting from the first one) is added to the
current result (starting from 0); the resulting amount is multiplied by 113, then take the reminder by modulo 10000007 –
 this will be the new value of the result, and so on. Input data contains the length of the array in the first line.
Elements of the array follow in the second line, space separated. The output should contain a single number – the
resulting checksum.

168 List of prime numbers
Input data in the first line specifies the number of prime numbers to be output. The second line contains the indices of
interest to us in the array of prime numbers. They will be in the range from 1 to 200000. The output should contain the
prime numbers, corresponding to the specified positions in the array of all primes. Please note: in this problem indices
of the array start from 1 and not from 0, so it will be easier to compare with primes lists from the internet.

169 The maximum pairwise product
The maximum pairwise product The first input line contains an integer 2≤n≤2⋅105, the second — the sequence of integers
0≤a1,a2,…,an≤105. Print the maximum pairwise product of the two elements of the sequence, i.e. max1≤i≠j≤naiaj.

170 Finite simple continued fraction
Write a program, which will transform the ordinary fraction into a list of coefficients a0,a1,…,an.

171 Small parser
Write a program that parses user commands and imitates their processing. A sequence of commands, each on a separate
line. A command consists of the letters of Latin alphabet, spaces and tab symbols. It is guaranteed that there are no
spaces at the beginning and at the end of a line. End is always the last command. Messages while processing of commands,
as specified in the problem statement; one message per line.

172 Maximum element in a matrix
Find the indexes of the initial appearance of the maximum element in a matrix. On the input, the program receives the
size of matrix n and m, and then n lines having m numbers in each. n and m do not exceed 100. Output two numbers: the
row number and the column number, in which the greatest item in the two-dimensional array (matrix) is located. If there
are several such elements, output the one, which has the smaller row number; and if row numbers are the same - the one
having the smaller column number.

173 Matrix 2
Given the number n, not greater than 100. Create the matrix of size n×n and fill it by the following rule. Numbers 0
should be stored on the primary diagonal. The two diagonals, adjacent to the primary one, should contain numbers 1. The
next two diagonals - numbers 2, etc.

174 Star figure
Given an odd number n, not exceeding 15. Create a two-dimensional array (matrix) from n×n elements, by filling it with
"." symbols (each element of the matrix is a string containing a single symbol). Then fill the middle row of the matrix,
the middle column, and the main and the secondary diagonals with the "*" symbols. As a result, all "*"s in the array
must form the star figure. Output this matrix; elements of the array should be space separated.

175 Cinema
The cinema has n rows, each consisting of m seats (n and m do not exceed 20). The two-dimensional matrix stores the
information on the sold tickets, number 1 means that the ticket for this place is already sold, the number 0 means that
the place is available. You want to buy k tickets to the neighbouring seats in the same row. Find whether it can be done.
On the input, the program gets the numbers n and m. Next go n lines, each containing m numbers (0 or 1), separated by
spaces. Next goes the number k. The program should output the row number in which there are k consecutive available
seats. If there are several such rows, output the number of the smallest such row. If there is no such row, output the
number 0.

176 Transposition of the matrix
Input, separated by spaces: the number of rows of the matrix, the number of columns of the matrix, then go the elements
of the two-dimensional matrix itself, row by row. Output: the result of the transposition of the matrix (row by row).

177 Symmetric matrix
Given the number n, not exceeding 10, and a matrix of size n × n. Check whether this matrix is symmetric in relation to
the main diagonal. Output the word “YES”, if it is symmetric and the word “NO” otherwise.

178 K-th diagonal below the primary diagonal
Given the square two-dimensional matrix of size n × n and the number k. Output the elements of the k-th diagonal below
the primary diagonal (i.e. if k = 1, you need to output the elements of the first diagonal below the primary one, if
k = 2 - the second diagonal, etc.). The value of k can be negative, for example, if k = −1, you need to output the value
of the first diagonal above the primary one. If k = 0, it is needed to output the elements of the primary diagonal.
The program gets the number n as input, not exceeding 10, than the matrix of size n × n, than the number k.

179 S-shape
Given two integers n and m, each of then does not exceed 30.. Fill in the two-dimensional array (matrix) of size n×m
with the numbers from 1 to n×m in “S-shape”, as shown in the example. Output the resulting matrix, each element should
take exactly 4 characters (including spaces).

180 Rotate a rectangle array
Given a rectangle array n×m in size. Rotate it by 90 degrees clockwise, by recording the result into the new array m×n
in size. Input the two numbers n and m, not exceeding 100, and then an array n×m in size. Output the resulting array.
Separate numbers by a single space in the output.

181 Swap the columns
Given a two-dimensional array (matrix) and the two numbers: i and j. Swap the columns with indices i and j within the
matrix. Input contains matrix dimensions n and m, not exceeding 100, then the elements of the matrix, then the indices i
and j.

182 Two-dimensional array
Given two integers n and m, not exceeding 100. Fill in the two-dimensional array (matrix) of size n×m with the numbers
from 1 to n×m by “diagonals”, as shown in the example. Output the resulting matrix, each element should take exactly 4
characters (including spaces).

183 Сhess order
Given two integers n and m, not exceeding 100. Fill in a matrix of size n×m chequer-wise: the cells of one color should
be filled with zeros, and of another color - with positive natural numbers top to bottom, left to right. Number 1 should
be written in the top left corner. Output the resulting matrix, each element should take exactly 4 characters.

184 Spiral
Output the matrix of size n×n, filled by the integers from 1 to n2 in a spiral, coming from the top left corner and
twisted clockwise, as shown in the example (here n=5).

185 Swap the elements in matrix
Write a program, which inputs the rectangular matrix from a sequence of lines, ending with a line, containing the only
word "end" (without the quotation marks). The program should output the matrix of the same size, where each elements in
the position (i, j) is equal to the sum of the elements from the first matrix on the positions (i-1, j), (i+1, j),
(i, j-1), (i, j+1). Boundary elements have neighbours on the opposite side of the matrix. In the case with one row or
column, the element itself maybe its neighbour.

186 Transposing
Write a program that takes a matrix as input, performs its transposing and outputs the result.

187 Update dictionary
Write the function update_dictionary(d, key, value), which takes the dictionary d and the two numbers key and value. If
the key key is present in the dictionary d, then append the value value to the list, which is stored by this key. If the
key key is not present in the dictionary, you need to append the value to the list keyed 2⋅key. Is there is no key
2⋅key, you need to add the key 2⋅key to the dictionary and store the list [value] by it. You need to implement only this
function, there should be no code except of it. The function should not call the input and print functions.

188 The results of the function
There is an implemented function f(x), accepting an integer number x as input, which calculates some integer value and
returns it as a result of the operation. The functions is calculated rather long, does not print anything, does not
write anything into files and depends only on the argument x. Write a program, the first line input of which contains
the n number — the amount of x values, for which you need to find out the value of the function f(x), then the n values
themselves, each on the separate line. After each entered argument value, the program should output the corresponding
values of the f function on the separate line. To speed up the computation necessary to save already calculated values
of the function under certain known arguments.

189 War and Peace
The program must read one line from the standard input and for each unique word in this line output the count of its
repeated occurrence (case insensitive) in the "word amount" format (see the output example). The order of words output
may be arbitrary. Each unique word must appear in the output only once.

190 Turtle
The program gets a number of commands n as input, which should be performed by the turtle, followed by the n lines with
the commands themselves. You need to output two numbers in the single line: the first and the second coordinate of the
final point for the turtle. All coordinates are integers.

191 Spell checker
The simplest spell checker is based on a list of known words. Every word in the checked text is searched for in this
list and, if such a word was not found, it is marked as erroneous. Write this spell checker. The first line of the input
contains d– number of records in the list of known word. Next go d lines contain one known word per line, next — the
number l of lines of the text, after which — l lines of the text. Write a program that outputs those words from the
text, which are not found in the dictionary (i.e. erroneous). Your shell checker should be case insensitive. The words
are entered in an arbitrary order. Words, which are not found in the dictionary, should not be duplicated in the output.

192 Substitution cipher
Write a program that can encode and decode the substitution cipher. The program accepts two input strings of the same
length; the first line contains the characters of the original alphabet, the second line - the symbols of a resulting
alphabet, then goes a line you need to encode by the transmitted key, and another line to be decrypted.

193 Football teams
Given a list of football teams with the result of the match. Output the summary table of the results of all matches.
The team gets 3 points for winning, 0 points for loosing, 1 point for draw.
Input format: The first line specifies the integer n— the number of completed games. After this follow the n lines,
which contain the game results in the following format:First_team;Goals_by_first_team;Second_team;Goals_by_second_team
Output of your program should look like the following: Team:Total_games Wins Draws Defeats Total_points
You can output teams in an arbitrary order.

194 Pete's homework
First input the integer N — the number of words in the dictionary (0 ≤ N ≤ 20000). Next go N lines with words from the
dictionary. Each word consists of not more than 30 symbols. All words consist of capital (uppercase) and small
(lowercase) letters of the Latin alphabet. Each word contains only one capital letter - the one, on which the emphasis
should be made. The words in the dictionary are listed in alphabetical order. If there are multiple emphasis placement
possibilities in the same word, then these options in the dictionary are in arbitrary order. Next goes the homework,
done by Pete. Homework is a single line of text, having a total length of not more than 300,000 characters. This line
consists of words that are separated by exactly one space. The length of each word does not exceed 30 symbols. All words
consist of the lowercase and uppercase letters of the Latin alphabet (uppercase are the letters, where Pete put the
emphasis). By an error, Pete could put more than one emphasis in a single word or may not put an emphasis at all.
Output the number of errors in the Pete's text, which Vince will find.

195 Symmetric difference of sets
The input for this program are two sets. Each set in a separate line; elements of the set are space separated.
Your program must output the symmetric difference of these sets.

196 How many different numbers are in list?
Given the list of integers, which may contain up to 100,000 numbers. Find how many different numbers are in this list.

197 Jolly jumper
The sequence of n>0  integers is called a jolly jumper if the absolute differences of the consecutive elements take all
the possible values between 1 and n−1.For example, the sequence 1 -3 -4 -1 1 is a jolly jumper sequence, as the absolute
differences are equal to 4 1 3 2, accordingly, and n−1=4.We assume that a sequence containing only one element is a
jolly jumper. Write a program that checks whether the entered sequence is a jolly jumper.

198 Value of the function
Write the function f(x), which returns the value of the next function, defined for any number:

199 Modify list
Write the function modify_list(l), which takes the list of integers as an argument, deletes all odd numbers from this
list, and integrally divides all even numbers by two. The function should not return anything; it needs only to alter
the list, for example:

200 Circle
Given five real numbers: x, y, xc, yc, r. Check whether the point (x, y) belongs to the circle with centre (xc, yc) and
radius r. If the point belongs to the circle, output the word YES, otherwise - output NO. The solution should contain
the IsPointInCircle(x, y, xc, yc, r) function, returning True, if the point belongs to the circle and False, if it does
not belong. The program should read the coordinates of the point, call the IsPointInCircle function and, depending on
the returned value, output the necessary message to the screen. The IsPointInCircle function should not contain the if
statement.

201 Minimum of two numbers
Write the function min(a, b) that finds the minimum of two numbers. Then write a function min4(a, b, c, d) that finds
the minimum of four numbers using the min function. Read four integers and output their minimum.

202 Shaded area
If the point belongs to the area (the area includes the borders), output the word YES, otherwise - output NO. The
solution must contain the function IsPointInArea(x, y), returning True, if the point belongs to the area, and False
otherwise. Your program should read the coordinates of the point, call the IsPointInArea function and, depending on the
returned value, output the desired message to the screen. Function IsPointInArea should not contain the if statement.

203 Square
Given the two real numbers x and y. Check whether the point with the coordinates (x, y) belongs to the shaded square
(including its boundary). If the point belongs to this square, output the word YES, otherwise - output NO. Your solution
should contain the IsPointInSquare(x, y) function, returning True, if the point belongs to the square and False, if it
doesn't belong. Your program should calculate the coordinates of the point, call the IsPointInSquare function and,
depending on the returned value, display the corresponding message. The function IsPointInSquare must not contain the if
statement.

204 Distance
Given the four real numbers: x1, y1, x2, y2. Write the function distance(x1, y1, x2, y2), calculating the distance
between the point (x1. y1) and point (x2, y2). Read the four real numbers and output the result of this function's call.

205 Square 2
Given the two real numbers x and y. Check whether the point with the coordinates (x, y) belongs to the shaded square
(including its boundary). If the point belongs to this square, output the word YES, if otherwise - output NO. Your
solution should contain the IsPointInSquare(x, y) function, returning True, if the point belongs to the square and
False, if it doesn't belong. Your program should input the coordinates of the point, call the IsPointInSquare function
and, depending on the returned value, display the corresponding message. The function IsPointInSquare must not contain
the if statement.

206 The smallest number
Write the implementation of the function closest_mod_5, which takes a single argument (integer x) and returns the
smallest number y, such that: y is greater or equal to x, y divides evenly by 5.

207 Sum of digits
Write a function that takes a positive three-digit number as input and returns the sum of its digits. The function
should have a name digit_sum and take an argument n.

208 Expression 2
Write a function to compute the value of the following expression: 1−6pqpq. The function should have the name calc_expr
and a single parameter p∈(0,1). It may be convenient to create the variable q=1−p inside the function.

209 Power 2
Write the function pow, having the two integer arguments: a and p, and returning the value of ap.

210 Expression
Write a function to compute the value of the following expression: a+bc5−a3+a+c34. Where a, b, c - integers.
The function should have a name calc_expr and the three parameters: a, b, c.

211 Find the resulting value
Given the function f(x), where x is an integer. You should compute  f1024(x), where fn(x)=f(f(...f(x)...)) n times, for
example, f2(x)=f(f(x)) Recursion is prohibited; so you are allowed to use only simpler language constructions
(functions, expressions, variables). When solving this problem you should assume that function f is already declared and
implemented. You should read an integer x from the input, and output the resulting value of f1024(x), using the print
function.

212 Positive filter
Write the function filter_positive, which takes a list of numbers as input, and, not changing this list, returns the new
list containing only the positive elements of it. You should not write input and output, only a function.

213 Exclude duplicates
Write a program, which takes the list of numbers and creates a new list, which contains all the elements of this list,
excluding duplicates. Write your solutions as a function f(ls).

214 Fibonacci
Write a program with the function fib(n), which returns the n-th Fibonacci number by the given non-negative integer n.
You can't use loops in this problem – use the recursion. Your program should read the n, call the fib(n) function and
print the answer.

215 Sum of numbers
Given the sequence of numbers, ending with number 0. Find the sum of all these numbers without using a loop.

216 Skyscraper
The skyscraper has n floors. It is known that if you drop the glass ball from the floor p and it breaks, if you drop it
from the floor p+1 it will also break. It is also known that the ball always breaks if you drop it from the last floor.
You need to determine the minimum floor number, falling from which the ball will break. You have two balls to perform
the experiment. You can break them both, but you need to provide the exact correct number after that. Find out what
number of throws is enough to solve this task.

217 Power 3
Given a real positive number a and an integer number n.Find an. You need to write the whole program with a recursive
function power(a, n).


218 N-th power
It is possible to find a n-th power much quicker than by making n multiplications! To do this you need to use the
following recurrence relations: an=(a2)n/2 for even n, an=a×an−1 for odd n. Implement the algorithm of quick
exponentiating using a recursion function. Given a real number a and a non-negative integer n.

219 Decompositions
Given the integer N (1≤N≤40). List all the decompositions of N into the whole positive addends. The addends should go in
non-ascending order within each decomposition. Output all decompositions in the lexicographical order.

220 k-combination
Implement the program, which calculates C(n, k) for the specified n and k.

221 Tower of Hanoi
Tower of Hanoi is one of the well-known puzzles with the following rules. Given three rods (let's number them as 1, 2
and 3). The first rod has n rings on it with radius from 1 to n. Rings are ordered by radius, and the largest of the
rings lies below all others. You should write an algorithm to move all n rings from the first rod to the third rod,
sticking to the following rules:
Only one disk can be moved at a time.
No disk may be placed on top of a smaller disk.
The program should output the shortest sequence of actions required to move all the rings from the 1 rod to the 3 one.

222 Koch curve
Write a program that takes number n as input − the number of iterations to generate curve, and outputs the sequence of
turn angles when drawing a corresponding line from the start to the end point, without leaving the pen.

223 Collatz conjecture
Given natural number n. Generate a sequence of integers, described in the Collatz conjecture: If n is an even number,
divide it in half, if it is odd, multiply it by 3 and add 1. Repeat this operation until we get the number 1 as a result.

224 Double factorial
Implement a function to compute the double factorial, that is the product of natural numbers with the same parity and
not exceeding a given number. The function argument can be any non-negative integer.

225_The_first_and_the_last_elements
Write a program, which gets as input the list of numbers (for example, a=[5,10,15,20,25]) and creates a new list,
consisting of the first and the last elements of the given list. Write a solution with the use of the function.

226 Find number
Given positive integer N. Find the number of positive integers less than N such that their sum of digits (in decimal
notation) is equal to the sum of digits in the number N. Output the number of such integers.

227 Interpreter of the mathematical expression
Write a simple interpreter of the mathematical expression. The input is a string with expression, consisting of two
numbers, connected by a binary operator: a operator b, where instead of operator the following words can be used: plus,
minus, multiply, divide - for addition, subtraction, multiplication and integer division respectively.

228 Mod checker
Implement the mod_checker(x, mod=0) function, which will generate lambda function of the single argument y, which will
return True, if the remainder of dividing y by x equals to mod, and False otherwise.

229 A bit harder
The input of this problem in a Python code; each line may contain one assignment, but with a several variables. You need
to find all uncommented assignments and for each of them output the space separated number of the line (in which it
occurs) and the name of each variable (in the same order as they are in the assignment).

230 Repeats
This problem has an input text - the list of phone numbers (one phone number per line). Your task is to check whether
these phone numbers are "cool": the phone number is called "cool", if it contains 3 or more of the same digits in a row.
For example, number 19992034050 is a "cool" one, but 19500237492 is not. Your task is to leave only the cool numbers:
standard output should contain the "cool" numbers, each number on a separate line.

231 Grouping
For this problem, input is the code in Python. Your task is to find all the assignment in this code, and output, where
they occurred and the value of what variable they have changed! Please remember, that according to the PEP 8 standard,
the assignment operator is separated by a single space from both ends (unlike passing an argument). This way an
assignment is deemed valid and we consider that (something, consisting only from letters, numbers and underscore) =
(something). In this problem we consider that a line may contain only one assignment and only to one variable. For each
assignment, you need to output in a separate line – the line number (line numbers are numbered from one) and the name of
the variable, whose value has been changed. Line numbers must be in ascending order.

232 Replacement
Task is to keep only words separated by a space (you need to get rid of all the other characters, whether they are line
breaks, commas or periods).

233 Sets of symbols
In this problem, you get text as input. By using regular expressions you should find all occurrences of the "you" or
"You" in it and output the number of occurrences.

234 Character by character match
In this problem the input is text. Using regular expressions, find all occurrences of the "you" substring in it and
display its number. This problem is case-sensitive.

235 Vehicle registration number
Write a program that uses regular expressions to check whether the input string is a vehicle registration number.
Vehicle registration number has the following format: ?***??, where ? – a Latin symbol from the set [A, B, E, K, M, H,
O, P, C, T, Y, X], and * – any digit from 0 to 9. The program should output Yes or No.

236 Phone number
Write a program that uses regular expressions to check whether the input string is a phone number. A phone number has
the following form: 19∗∗∗∗∗∗∗∗∗, where ∗ is any number from 0 to 9. The program should print Yes or No.

237 Secure sum
Implement the sum function, which accepts two arguments and behaves the following way. If the type of at least one of
the arguments is not int , the function throws TypeError. If the type of both arguments are not int, i.e. are integers,
but at least one of the numbers is not a positive one, the function throws ValueError. Otherwise, the function returns
the sum of the arguments.

238 Catch me, if you can
In this problem, your program will be able to call the foo function, which does not take any arguments. The foo function
may throw one of the following three exceptions: AssertionError, MemoryError and RuntimeError. In your program you need
to call the foo function, catch a thrown exception and, depending on the type of exception, output "Caught <name of the
exception>". For example, if the foo function throws AssertionError, you need to output "Caught AssertionError" (output
the message without the quotation marks). Your program should not declare the foo function, it should only call it.

239 Exceptions on the stack
You are given a description of the current state of the program. Up to this point, we’ve made the chain of function
calls and the latest called function currently handles the exception. You are given the stack of functions calls, the
behaviour of the functions when handling various exceptions and the name of the currently processed exception.
Functions can operate with an exception as follows.
The function does not handle (does not catch) the exception. In this case, the function is removed from the call stack,
and the exception is thrown further.
The function handles the exception and throws a new exception. In this case, the function is removed from the call stack
and the new exception is thrown further.
The function handles the exception and continues to work correctly. In this case, the function remains on the stack of
calls and no new exceptions are generated.


240 Exeptions 2
Write a function  get_int(start_message, error_message, end_message), taking three strings as arguments. The function
should ask users for the input until an integer is entered (a string, which is accepted by the int function without
errors).ore the first request you should enter the  start_message, argument, after each faulty input you should output
the value of the string error_message and in case of a successful input - the string end_message and return the received
integer from the function (see example below). Each output message should be on a separate line.

241 Exceptions
Your program will have an access to foo function, which can throw exceptions. You need to write a code, which launches
this function and than catches the ArithmeticError, AssertionError, ZeroDivisionError exceptions and outputs the name of
the caught exception.

242 Positive list
Implement the class PositiveList which stores positive integers, by inheriting it from the class list. Also implement
the new exception NonPositiveError. In the class PositiveList redefine the method append(self, x) in such a way that
when someone tries to add a non-positive integer, it throws an exception NonPositiveError. In case of a positive
integer, it should be appended as in a standard list. In this problem it is guaranteed that an integer will always be
passed as an argument x for the append method.

243 Awkward situation
You are given a description of the exception classes inheritance in the following format.
<exception name 1> : <exception name 2> <exception name 3> ... <exception name k>
It means that exception 1 is inherited from exception 2, exception 3, etc.

244 The average height of a student
There is a file with the table in TSV format, containing the information regarding height of the students from different
grades. Write a program that reads the file and calculates the average height of a student for each grade. The file
consists of a set of lines, each of which represents three fields: Grade Surname Height
Only a number marks the grade. Letter modifiers are not used. The grade number can be from 1 to 11 inclusive. There are
no spaces in the surnames, and the height is expressed as a natural number, but when calculating the average you need to
calculate the value in the form of a real number. You should output the information on the average height in ascending
order of the grade number (for the grades from the first to the twelve). If there is no information about some grade,
output a dash, see example.

245 Repetition coding
Encoding of repeats is carried as the following: s = 'aaaabbсaa' is converted into 'a4b2с1a2', that is, the groups of
the same characters of the input string are replaced by the symbol and the number of its repetitions in this string.
Write a program that reads a line from the file corresponding to the string, compressed using the repetition coding, and
performs the reverse operation, obtaining the source string. Output the obtained string into a file and attach it as a
solution to this problem. The original string does not contain any numbers; it means that the code is definitely
interpretable.

246 The most frequent word
Write a program that reads the text from the file (the file may contain more than one line) and outputs the most
frequent word in the text, and after a space - how many times it occurred. If there are several such words, output the
first one in a lexicographical order (you can use the < operator for the strings). The words written in different
registers (cases) are considered to be the same.

247 Students’ performance data
There is a file with the students’ performance data. It consists of a set of rows, where the following information is
stored in each of the rows: Surname;Math_grade;Physics_grade;English_grade
All the fields within the row are separated by semicolon. All the grades are integers. Write a program that reads a file
with this structure, and for each of the students it outputs his average grade for these three subjects on a separate
line, corresponding to this particular student. In addition, a separate line at the end of the file should contain the
average grade for math, physics and English for all students, separated by a space.

248 Next file
Given a set of files, each of which (except the last one) contains a name of the next file. First word in the text of
the last file: "We". Download the provided file. It contains a link to the first file from this set. All files are
located in the catalogue at https://stepic.org/media/attachments/course67/3.6.3/ Upload the content of the last file
from the set as a solution for this problem.

249 Generate the new text file
Given a text file that contains some number of non-empty lines. Using this file, generate the new text file, which
contains the same lines in the reversed order.

250 Even-numbered lines
Given: A file containing at most 1000 lines. Return: A file containing all the even-numbered lines from the original
file. Assume 1-based numbering of lines. Please copy the content of output file into the text field below.

251 LCD-calculator
Given a sequence of digits, write a program, which outputs these digits in the style of an LCD-calculator (see example).
The size of all digits is 4 symbols in width and 7 symbols in height. There should be one empty column between the
digits in the output. There should be no spaces before the first digit. Digits in the output should be framed, corners
of this frame should contain the x symbols, a horizontal line if created by the - symbol ("hyphen"), and the vertical
one -- by the vertical line symbol: |.

252 Derivative of the polynomial
The problem is simple – find the derivative of the polynomial. The polynomial can be large, but only with non-negative
integral powers and integer coefficients. Think about how it is better to represent it in the memory? The output should
contain no spaces and be in the descending order of powers, although the input may not comply with this rule.
Additionally, the input may contain a polynomial with unreduced terms.

253 Conway's Game of Life
Write a program, calculating the next state of the field for the Conway's Game of Life. The field is a rectangle; the
cells on the edge have the cells from the opposite side as their neighbours (the field is a torus).
Input format: First line specifies two integers separated by a space - the height and the width of the cell.
Next lines contain information on the state of the cell. A dot "." marks a dead cell, an "X" symbol − alive one.
Output format: The next state of the field, using the same markings as in input.

254 Coverting from decimal into Roman system
Find the string which represents this number in the Roman numeral system.

255 From Roman system into the decimal
Write a program that converts the number from Roman system into the decimal one.

256 Minesweeper game
A field for the minesweeper game is a grid n×m in size. The cell of the grid may or may not contain a mine.
Write a program that outputs "solved" field, i.e., for each cell, which is not a mine, it indicates the number of mines
in the neighbouring cells (including diagonal directions)

257 Number of occurrences
Given two strings s and t, consisting of lowercase letters of the Latin alphabet.
Find the number of occurrences of the line t in the line s.

258 Prime numbers
Implement the generator function primes, which will generate prime numbers in ascending order, starting from number 2.

259 Phoebe Iterson
In this problem, you have to write the fibonacci_sequence class, from which we can take the iterator, which will sort
numbers from the Fibonacci sequence.

260 Implementation of the multifilter class
Class filter is one of the most frequently used classes in Python. In the constructor it takes the two arguments a and f
– a sequence and a function, and allows to iterate only by such elements x from the sequence a that f(x) equals to True.
Let’s say that in this case the function f accepts the element x, and the element x is an accepted one.
In this problem, we ask you to implement the multifilter class, which will do the same as the standard filter class, but
will use several functions instead of a single one. The decision to accept an element will be taken based on how many
functions accept  this element, and how many don't. Let us mark these quantities as pos and neg. Let us introduce the
notion of the decision function – this is the function, which takes the two arguments – numbers pos and neg, and returns
True, if the element is allowed, and False otherwise.

261 Work with the API 2
In this problem, you need to use the API of the numbersapi.com website. You are given a set of numbers. For each of the
numbers you need to find out whether there is an interesting mathematical fact about this number. Output string
Interesting for each of the numbers that have an interesting fact, and Boring otherwise. Output the information on
numbers’ interestingness in the same order, in which these numbers are presented in the input file.

262 Work with the API
In this problem you need to use the API of artsy.net. API of the Artsy project provides information on some of the
artists, their works and exhibitions. As part of this problem you will need to get the information about the people of
art (let us briefly call them "artist"). You are given IDs of artists in the Artsy database. For each of the IDs get the
information on the name of the artists and his or her birth year. Output names of the artists in a nondecreasing order
by their birth years. If the artists have the same year of birth, output their names in lexicographic order.

263 Change Problem
Solve the Change Problem. Input: An integer money and an array Coins=(coin1,⋯,coind).
Output: The minimum number of coins with denominations Coins that changes money.

264 The shortest distance
Find the shortest distance between the two local maximums of the sequence of natural numbers, ending with the number 0.
The number 0 itself is not included into the sequence and serves as a sign of its end. If there are no two local
maximums in the sequence, output 0. The start and the end value are not considered as a local maximums.

265 Strict local maximums
The element of a sequence is called a local maximum, if it is strictly greater than the previous and the subsequent
element of the sequence. The first and the last elements of the sequence are not the local maximum. Given the sequence
of natural numbers, ending with number 0. The number 0 itself is not included into the sequence and serves as a sign of
its end. Find the number of strict local maximums in this sequence.

266 Binary logarithm
Write a program to calculate the integer-valued log to base 2 (binary log). Input – first line contains an integer T,
next go the T lines with tests. Each tests consists of one positive integer ai<109. For each ai you need to output on a
separate line such largest number p, that 2p≤ai. It is guaranteed that ai≥1. While solving this problem, you an define
any functions you need any. Moreover, it is recommended to put the calculation of the log into a separate function.

267 Shoe store
The shoe store sells shoes of different sizes. It is known that you can wear one pair of shoes on the other one, if it
is at least three sizes larger. A buyer came to the store. You need to find the greatest number of pairs of shoes, which
the seller can offer to this buyer, so that she is able to wear them all at the same time.

268 Participants of Olympiad
During the Olympiad, each of the participants received his own identification number – an integer. The list of
participants of the Olympiad needs to be sorted by the number of points they have gained.

269 Points
Output all the given points in ascending order of their distance from the origin of the coordinate system.  The program
gets the set of points in the plane as input. First goes the number of points – n, then is a sequence of n lines, each
of which contains two numbers: the coordinates of the point. The value n does not exceed 100, all of the initial
coordinates are integers, not exceeding 1000.

270 Gradebook
Output names and surnames of the students in descending order of their average grade.First given the number of students
n, then n lines, each of which contains the surname, name and three numbers (grades for three subjects: mathematics,
physics, and informatics). The numbers in the line are separated by a single space. The grades shall take the value from
1 to 5. You need to output the surname-name pairs on a single line, separating surname and name by a single space. You
don't need to output marks. If several students have the same average grade, you need to output them in the order
specified in the input data.

271 The N-th Fibonacci number
Given the integer 1≤n≤40, you need to find the n-th Fibonacci number.

272 The N-th Fibonacci number - 2
Given the integers 1≤n≤1018 and 2≤m≤105. Find the reminder of division of the n-th Fibonacci number by m.

273 Last digit
Given the integer 1≤n≤107, you need to find the last digit of the n-th Fibonacci number. As we remember, Fibonacci
numbers grow very quickly, therefore you should be extremely careful when calculating them. In this problem, however,
we can evade this issue, because we are interested only in the last digit of the Fibonacci number: if 0≤a,b≤9
— the digits of numbers Fi and Fi+1 correspondingly, than (a+b)mod10 — the last digit of the number Fi+2.
For each of the entered number N, find the number of integers from 1 to N, relatively prime (coprime) to N.

275 The smallest integer
Given two integers 1≤a,b≤2⋅109. Find the smallest integer m, which can be divided both by a, and by b.

276 The gcd
Find the greatest common denominator of the two integers.

277 Queens
It is known that on the board 8×8 in size you can place 8 queens so that they do not beat each other. You are given the
placement of these 8 queens on the board, please find whether there is a pair of queens beating each other among them.

278 Sequence of integers
Write a program that reads the sequence of integers, separated by spaces, and then deletes from it all of the numbers
that are placed on the even positions, and after this outputs the resulting sequence in the reverse order.

279 Cyclically shift
Cyclically shift the elements of the list to the right (A[0] goes to the place of A[1], A[1] - to the place of A[2], ...
, and the last element goes to the place of A[0]).

280 Pairs
Given the list of numbers. Calculate how many pairs of elements are equal to each other. It is considered that any two
elements, which are equal to each other, form one pair that you need to count.

281 Bowling pins
N bowling pins were put in one row and numbered from left to right with numbers from 1 to N. Then K balls were thrown
at this row; i-th ball knocked down all pins with numbers from li to ri  inclusive. Find which pins remained standing.

282 Swap neighbouring items
Swap the position of neighbouring items of the list (A[0] with A[1], A[2] with A[3] etc.). If there is odd number of
elements in the list, the last element remains at its position.

283 Shift
In this problem, you need to implement the function, which shifts the contents of the array to the left for a specified
number of positions (circular shift). On input, the function takes the array, its size and the value of the shift. For
example, if on input the function receives the array: a = [ 1, 2, 3, 4, 5 ]; and you need to circularly shift it 2
positions to the left, on the output we will get the numbers in the following order: 3, 4, 5, 1, 2.
Note that the value of the shift may be zero, and may be larger than the size of the array; please take into account
all these cases.

284 Step matrix
Write the function that takes one integer number N and returns the "c" matrix, consisting of N floors. The floors are
numbered from the first one; the width of each step is equal to one row or column.

285 Synonyms
You are given the dictionary, consisting of pairs of words. Each word is a synonym to its pair-word. All the words in
the dictionary are different. Determine the synonym to a one given word.

286 Sequence of positive integers
You need to write a program that "flips" a sequence of positive integers. On input there is a sequence of space
separated positive integers. The sequence ends with zero. You are required to output the sequence in the reverse order.
The numbers should be space separated on the output. The terminating zero is simply the indicator of the end of the
sequence, it is not a part of it, i.e. you should not output it.

287 String with numbers
Input – one line of random text. The text contains words and integer numbers. Your program should calculate and output
the sum of all integers that appear in the text.

288 Substring
On input your program gets the two strings s and t, consisting of lowercase Latin letters.
Output one number – the number of occurencies of the string t in the string s.

289 Replacement
Given three strings – s, a, b, which consist of lowercase Latin letters. In one operation you may replace all
occurrences of the substring a in the string s to the string b. For example, s = "abab", a = "ab", b = "ba", then after
performing one operation the string s goes to the string "baba", after performing two operations – to the string "bbaa",
and all further operation will not alter the string s. You need to find out after how many operations there will be no
occurrences of string a in the string s, or to find out that this will not happen. Output a single number – the number
of operations after which there will be no occurrences of the string a in the string s.

If after performing any number of operation there still will be occurrences of the string a in the string s, output Impossible.

290 The second word
A user enters a phrase, which is just a bunch of words separated by commas.
Print the second word in the sentence (it is guaranteed that there's at least two words there).

291 Remove letters
A user inputs a word. Remove all letters that are in even positions in the word, and print what's left.

292 String Composition Problem
Given a string Text, its k-mer Compositionk(Text) is the collection of all k-mer substrings of Text (including repeated
k-mers). For example, Composition3(TATGGGGTGC) = {ATG, GGG, GGG, GGT, GTG, TAT, TGC, TGG}

293 Vacation problem
Write a program to figure out what day you would return, given the day you leave and how many days you will be gone.
For example:
If you leave on a Friday and you are gone for two (2) days, you would return on a Sunday.
If you leave on a Monday and you are gone for eight (8) days, you would return on a Tuesday.
If you leave on a Wednesday and you are gone 23 days, you would return on a Friday.
The program should ask for the day to leave and how many days the person will be away.

294 Two boxes
There are two boxes. First one has the size of A1×B1×C1, second one – the size of A2×B2×C2. Find whether you can place
one of these boxes inside the other one. You can turn the boxes only 90 degrees around the edges.

295 Graphics
https://ucarecdn.com/b3eff22a-e789-40fd-9489-bfb2fb389d17/
Check whether the point belongs to the given filled area (simple parabolas – y = (x-a)^2 + b )

296 Chess board
You are given two coordinates on a chess board of the first queen and two of the second. Find out, whether two queens
hit each other or not.

297 Horses on a chess board
There are two horses on a chess board and four coordintes x1, y1, x2, y2 are typed in. Determine, whether they can hit
each other or not.

298 Matrix multiplication
Given the two square matrices A, B having size n×n each (1≤n≤700). Elements of the both matrices are integers, not
exceeding 106 by absolute value. You need to find the matrix C=A×B.

299 Solution in natural numbers
On input given the number N (0⩽N⩽1012). If there exists natural numbers (or 0) x, y such that x2+y2=N, then you need to
output them. In case there are several solutions, output any of the pairs. Otherwise, output "No solution".

300 Prime factorization
Output the prime factorization of the natural number n > 1. Prime multipliers should be listed in ascending order and
separated by spaces.

301 Breakpoints in a permutation
Let  pn be a sequence of integer numbers.  If pi+1−pi is not equal to 1, then we say that (pi,pi+1) is a breakpoint.
Find the number of breakpoints in a permutation.

302 Spanish-Latin dictionary
Input data: The first line contains the only integer number N that is the number of Spanish words in the dictionary.
Then N descriptions follow: each of the descriptions is located in a separate line, where first goes a Spanish word,
next goes the space separated dash (symbol number 45), and then go the translations of this Spanish word into Latin,
separated by spaces and commas. Translations are sorted in the lexicographic order. The order of the Spanish words in
the dictionary is also lexicographic. All words consist of only the lowercase Latin letters; length of each word does
not exceed 15 characters. The total number of words at the input is not greater than 100000.
Output data: Output the Latin-Spanish dictionary, corresponding to the given one, strictly observing the format of the
input data. In particular, the first should be the translation of a lexicographically minimal Latin word, further - the
second in this order, etc. Spanish words inside the translation must also be sorted in a lexicographic order.

303 Turnpike Problem
Turnpike Problem: Given all pairwise distances between points on a line segment, reconstruct the positions of those
points.
Input: A collection of integers L.
Output: A set of integers A such that ∆A = L.

304 Adjacency matrix
Given square matrix consisting of n×n zeros and ones. Find whether this matrix can be an adjacency matrix of a simple
undirected graph.

305 Backslash
Given a sequence of lines. Output the lines, which contain the backslash "\".

306 Find a cat
Given a sequence of lines. Output all the lines, which contain "cat" as a word.

307 Swap letters
Given a sequence of lines. In each line swap the first two letters in every word, consisting of at least two letters.
A symbol from the group \w is considered a letter.

308 Two letters "z"
Given a sequence of lines. Output the lines, containing 2 letters "z" between which there are exactly three characters.

309 Find a cat - 2
You have been given a sequence of lines. Output the lines which contain "cat" as a substring at least twice.

310 Tandem repeat
Given a sequence of lines. Output the lines, which contain the word, consisting of two identical parts (tandem repeat).

311 Replacement
Given a sequence of lines. In each line replace all occurrences of the substring "human" to the substring "computer"
and output the resulting lines.

312 Binary notation
Given a sequence of lines. Output the lines, containing the binary notation of a number, divisible by 3. Binary notation
of a number is its notation in the binary numbering system. This problem can be easily solved by reduction of the string
to an integer and verification of the remainder of division by three, but still, we ask you to solve it without using
reduction to a number. Try regular expressions.

313 Multiple identical letters
Given a sequence of lines. In each line replace all occurrences of multiple identical letters by one letter. A symbol
from the group \w is considered a letter.

314 Replacement - 3
Given a sequence of lines. In each line replace the first occurrence of the word, consisting of only the Latin letters
"a" (case insensitive), to the word "argh".

315 Pattern
In this problem, you get text as an input. By using regular expressions you need to find all occurrences of the "you"
substring in it and output their number. NB. In this problem, you should also consider the case of letters.

316 Re-occurrence of a symbol
Given the list of phone numbers (each line contains one phone number). Your task is to check whether these phone numbers
are "cool": a phone number is called "cool", if it contains 3 or more same digits in a row. For example, number
19992034050 is a "cool" one, but 19500237492 is not.

317 Sets of symbols
In this problem, you get text on input. By using regular expressions you need to find all the occurrences of the "you"
or "You" substring in it and output their quantity.

318 Assignments - 2
Python code is given on input; there may be only one assignment per line, but with several variables. It is necessary to
find all uncommented assignments and for each such assignment output a space separated line number and name of each
variable (in the same order they are in the assignment).

319 Namespace
Implement a program that will simulate the work with namespaces. It is necessary to implement the support for the
creation of namespaces and adding variables into them.
In this problem, each of the namespaces has its unique text identifier - its name.
On input, your program is served the following requests:
create <namespace> <parent> –  create the new namespace with the name <namespace> inside the space <parent>
add <namespace> <var> – add the <var> variable to the namespace <namespace>
get <namespace> <var> – get the name of the namespace, from which the <var> will be taken during the request from the
<namespace>, or None, if such namespace does not exist

320 JSON format
You are given a description of the class inheritance in the JSON format.
The description represents an array of JSON objects that match the classes. Each JSON-object has the name field, which
contains the name of the class, and the parents field, which contains the list of names of the direct ancestors.

321 Using standard library
Download a JSON file and find sum of all foos. Foos are always integers.

322 XML format
You are given a description of a pyramid made of cubes in the XML format. The cubes can be of three colors: red (red),
green (green) and blue (blue). We know the color of each cube, and the cubes, located directly under it.

323 HTML-pages
There are two HTML-pages – A and B. From A we can go to B in one step, if inside A there is a link to B, i.e. inside A
there is a tag <a href="B">, possibly with additional parameters inside the tag. From A we can go to B in two steps,
if there is such document C, that from A to C we can go in one step, and from C to B we can go in one step.
On input your program gets two lines, containing the URLs to the two documents A and B. Output Yes, if you can go from
A to B for two steps, otherwise output No.
Please note that not all links inside the HTML pages can lead to an existing HTML pages.

324 HTML-file
Your program gets a link to an HTML-file as input.You need to download this file, and then find all links in a form
<a ... href="..." ... > inside it, and output a list of websites to which there is a link. In this problem a website –
is a domain name with all subdomains. I.e., this is a sequence of symbols, which follows right after the protocol
symbols, if any, up to the symbols of port or path, if any, excluding the cases with relative links in the form
<a href="../some_path/index.html">. Please output websites in the alphabetical order.

325 Message encoding
We will be dealing with a trivial example of message encoding, where the mapping of original symbols to the "code" is
simply taking the ASCII value of the symbol. For example, the "code" version of the letter 'A' would be 65.
You will be given as input a string of any length consisting of any possible ASCII characters. You must print out the
numerical ASCII value of each character of the string, separated by spaces.

326 Encode the message
We have the following symbol mappings: A ↔ 00 C ↔ 01 G ↔ 10 T ↔ 11
Given a string of A's, C's, G's, and T's, encode the message via the above mapping and print out the resulting encoded
message to standard output.

327 Decode the message
We have the following symbol mappings: A ↔ 00 C ↔ 01 G ↔ 10 T ↔ 11
Given a string of 0's and 1's, decode the message via the above mapping and print out the resulting decoded message to
standard output.

328 ASCII table
Implement the program that returns the letter, which stands after the "\" (backslash) symbol in the ASCII table by a
given distance N.

329 Assigments
In this problem Python code is served as input. Your task is to find all the assignments in the code and to output where
hey occurred, and the value of what variable they changed! Please remember that according to the PEP8 standard, the
operation of assignment (in contrast to the transfer of an argument) is separated by a single space from both sides.
Thus, as a valid assignment we consider if (something, consisting of only letters, numbers and lowerspace)=(something).
In this problem we believe that there may be only one assignment of only one variable per line.
For each assignment you need to output on a separate line – the line number (lines are numbered from one) and the name
of the variable, value of which has been changed. The line numbers must be in ascending order.

330 Remove all whitespace
Jack doesn't like when Amy puts spaces before punctuation marks, but Amy cannot possibly get rid of this habit! Help Amy
construct a regular expression, which will remove all whitespace characters before punctuation marks, not to freak out.

331 Smiley face
You need to check whether the string is a smiley face. If yes – output 1, otherwise – 0.
Smiley:
Eyes is one of ":" ";"  ">:",
nose "-" either one or none at all,
mouth is one of "{", "}", "[", "]", "(", ")", "p" at least once. One type may be repeated as many times as you want.
All symbols go precisely in the listed order, smiley does not contain any other symbols.

332 The Shortest Non-Shared Substring Problem
Finally, we ask you to solve the Shortest Non-Shared Substring Problem. Shortest Non-Shared Substring Problem:
Find the shortest substring of one string that does not appear in another string.
Input: Strings Text1 and Text2.
Output: The shortest substring of Text1 that does not appear in Text2.
CODE CHALLENGE (Extra Credit!): Solve the Shortest Non-Shared Substring Problem. (Multiple solutions may exist, in which
case you may return any one.)

333 The Longest Repeat Problem
Although the suffix tree decreases memory requirements from O(|Text|2) to O(|Text|), on average it still requires about
20 times as much memory as Text. In the case of a 3 GB human genome, 60 GB of RAM is a huge improvement over the 1 TB
that we needed to work with Trie(Patterns), but it still presents a memory challenge for most machines. This reveals a
dark secret of big-O notation, which is that it ignores constant factors. For long strings such as the human genome,
we will need to pay attention to this constant factor, since the expression O(|Text|) applies to both an algorithm with
2 · |Text| memory and an algorithm with 1000 · |Text| memory.
Yet before seeing how we can further reduce the memory needed for multiple pattern matching, we ask you to solve three
problems showing how suffix trees can be applied to other pattern matching challenges. The first such problem is the
Longest Repeat Problem.
Longest Repeat Problem: Find the longest repeat in a string.
Input: A string Text.
Output: A longest substring of Text that appears in Text more than once.
CODE CHALLENGE (Extra Credit!): Solve the Longest Repeat Problem. (Multiple solutions may exist, in which case you may
return any one.)

334 The Longest Shared Substring Problem
The second additional exercise that we will consider is the Longest Shared Substring Problem. Longest Shared Substring
Problem: Find the longest substring shared by two strings.
Input: Strings Text1 and Text2.
Output: The longest substring that occurs in both Text1 and Text2.
CODE CHALLENGE (Extra Credit!): Solve the Longest Shared Substring Problem. (Multiple solutions may exist,
 n which case you may return any one.)

335 Surface area
Given the four real (x,y) coordinates of a square A1A2A3A4, find its surface area.

336 Converting Fahrenheit to Celsius
Write a Python program to convert Fahrenheit to Celsius. C=5/9(F−32)

337 True or False?
A user enters two float numbers. Let's assume these are A and B. Print whether the following is true: A × B > A / B.
It is guaranteed that the second number (B) isn't zero. Your program should simply print "True" or "False".

338 Final amount of loan
Write a simple Python program that calculates the final amount of your loan that earns compound interest, given the
principal amount, the annual nominal interest rate, the number of times interested is compounded per year, and the
number of years. If P is the principal amount (initial investment), r is the annual nominal interest rate, n is the
number of times the interest is compounded per year, and t is the number of years, the total amount paid is
A=P(1+rn)nt
Amount owed is the principal amount multiplied by the amount one plus the annual nominal interest rate divided by n
raised to the number of times compounded multiplied by the number of years. (exponentiation)
Careful! The rules of precedence really matter in the student loan calculator problem.

339 Square of the hypotenuse
Given: Two positive integers a and b, each less than 1000. Write the integer corresponding to the square of the
hypotenuse of the right triangle whose legs have lengths a and b. Do not write Python code as an output, just a single
integer.

340 Karatsuba algorithm
Given two long integers 1≤x,y≤1050000 in decimal, output their product xy. Please note that some programming languages
(like Haskell, Python, Java) provide long arithmetic out of the box. Please do not use built-in functions,
but implement your own procedure.

341 Linear regression
Find the optimal coefficients to construct a linear regression. On input your program will get the name of the csv-file,
from which you need to read data. Your task is to calculate the vector of the coefficients of the linear regression for
he prediction of the first variable (the first column of data) by all the rest. Please remember that linear regression
model is y=β0+β1x1+⋯+βnxn. Print the coefficients of the linear regression, starting with β0, space separated.
We will verify the match with an accuracy of up to 4 digits after the decimal point.

342 Deque
Implement the deque with dynamic looped buffer. Commands are given as input in order to test the deque.
The first line contains the number of commands. Then each line contains one command.
Each command is specified as 2 integer numbers: a b.
a = 1 - push front,
a = 2 - pop front,
a = 3 - push back,
a = 4 - pop back.
If given command is pop, then the number b is expected value. If the pop command is called for an empty deque, then “-1”
is expected. You should output YES if all the expected values matched. Otherwise, if at least one expectation was not
met, then output NO.

343 Bracket sequence
Given a fragment of the bracket sequence, consisting of the symbols (){}[].
You need to find whether it is possible to continue this fragment to both sides to obtain the correct bracket sequence.
If it is possible – output the minimum correct bracket sequence, otherwise output "IMPOSSIBLE".
The maximum length of the string is 106 symbols.

344 How many numbers?
The first line contains the integer N (1≤N≤105). Next specified the array of integers from −109 to 109. Further goes
the number of requests K (1≤K≤105), next go K pairs of requests L, R  (−109≤L≤R≤109).You need to output the K numbers,
which are the responses to the requests "How many numbers in the array are located on the range from L to R?".

345 Histogram
At your individual Iris dataset take “Sepal length” (the first column) feature and find the histogram with 10 bins
(left-open intervals). Put the array of frequencies at the bins in the order of bins as your output.

346 Linear regression
Find the coefficients of linear regression Y = aX + b of the petal length Y and petal width X (features 3 and 4
respectively) as well as the determinacy coefficient between them. Output three float numbers in the following order:
a coefficient, b coefficient, determency coefficient. Separete the numbers by spaces. All problems allow to make a
default error of 0.001 in all decimal answers unless otherwise stated. It is enough to use 4 digits after the point.

347 PyCharm Edu
Given the series of numbers: 1, -0.5, 0.25, -0.125, ... . Try to understand how it works. On the input, the program has
integer n, and the output should be a real number corresponding to the sum of first n elements of the series.
